# Generated by Django 3.1.7 on 2024-11-11 22:43

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Coin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='0', max_length=4)),
                ('date', models.DateField(default='0')),
                ('priceusd', models.FloatField(default='0')),
                ('pricebtc', models.FloatField(default='0')),
                ('inflation', models.FloatField(default='0')),
                ('transactions', models.FloatField(default='0')),
                ('hashrate', models.FloatField(default='0')),
                ('stocktoflow', models.FloatField(default='0')),
                ('supply', models.FloatField(default='0')),
                ('fee', models.FloatField(default='0')),
                ('revenue', models.FloatField(default='0')),
                ('blocksize', models.FloatField(default='0')),
                ('difficulty', models.FloatField(default='0')),
            ],
        ),
        migrations.CreateModel(
            name='DailyData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('btc_priceusd', models.FloatField()),
                ('xmr_priceusd', models.FloatField()),
                ('xmr_pricebtc', models.FloatField()),
                ('btc_marketcap', models.FloatField()),
                ('xmr_marketcap', models.FloatField()),
                ('dash_marketcap', models.FloatField()),
                ('grin_marketcap', models.FloatField()),
                ('zcash_marketcap', models.FloatField()),
                ('xmr_transacpercentage', models.FloatField()),
                ('btc_transactions', models.FloatField()),
                ('xmr_transactions', models.FloatField()),
                ('zcash_transactions', models.FloatField()),
                ('dash_transactions', models.FloatField()),
                ('grin_transactions', models.FloatField()),
                ('btc_supply', models.IntegerField()),
                ('xmr_supply', models.IntegerField()),
                ('btc_inflation', models.FloatField()),
                ('xmr_inflation', models.FloatField()),
                ('dash_inflation', models.FloatField()),
                ('grin_inflation', models.FloatField()),
                ('zcash_inflation', models.FloatField()),
                ('xmr_metcalfebtc', models.FloatField()),
                ('xmr_metcalfeusd', models.FloatField()),
                ('btc_return', models.FloatField()),
                ('xmr_return', models.FloatField()),
                ('btc_emissionusd', models.FloatField()),
                ('btc_emissionntv', models.FloatField()),
                ('xmr_emissionusd', models.FloatField()),
                ('xmr_emissionntv', models.FloatField()),
                ('btc_minerrevntv', models.FloatField()),
                ('xmr_minerrevntv', models.FloatField()),
                ('btc_minerrevusd', models.FloatField()),
                ('xmr_minerrevusd', models.FloatField()),
                ('btc_minerfeesntv', models.FloatField()),
                ('xmr_minerfeesntv', models.FloatField()),
                ('btc_minerfeesusd', models.FloatField()),
                ('xmr_minerfeesusd', models.FloatField()),
                ('btc_transcostntv', models.FloatField()),
                ('xmr_transcostntv', models.FloatField()),
                ('btc_transcostusd', models.FloatField()),
                ('xmr_transcostusd', models.FloatField()),
                ('xmr_minerrevcap', models.FloatField()),
                ('btc_minerrevcap', models.FloatField()),
                ('btc_commitntv', models.FloatField()),
                ('xmr_commitntv', models.FloatField()),
                ('btc_commitusd', models.FloatField()),
                ('xmr_commitusd', models.FloatField()),
                ('btc_blocksize', models.FloatField()),
                ('xmr_blocksize', models.FloatField()),
                ('btc_difficulty', models.FloatField()),
                ('xmr_difficulty', models.FloatField()),
                ('btc_subscriberCount', models.IntegerField()),
                ('btc_commentsPerHour', models.FloatField()),
                ('btc_postsPerHour', models.FloatField()),
                ('xmr_subscriberCount', models.IntegerField()),
                ('xmr_commentsPerHour', models.FloatField()),
                ('xmr_postsPerHour', models.FloatField()),
                ('crypto_subscriberCount', models.IntegerField()),
                ('crypto_commentsPerHour', models.FloatField()),
                ('crypto_postsPerHour', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Dominance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=4)),
                ('date', models.DateField()),
                ('dominance', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='P2Pool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('mini', models.BooleanField()),
                ('hashrate', models.IntegerField()),
                ('percentage', models.FloatField()),
                ('miners', models.IntegerField()),
                ('totalhashes', models.IntegerField()),
                ('totalblocksfound', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Rank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=4)),
                ('date', models.DateField()),
                ('rank', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Sfmodel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('priceusd', models.FloatField()),
                ('pricebtc', models.FloatField()),
                ('color', models.FloatField()),
                ('stocktoflow', models.FloatField()),
                ('greyline', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Social',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=4)),
                ('date', models.DateField()),
                ('subscriberCount', models.IntegerField()),
                ('commentsPerHour', models.FloatField()),
                ('postsPerHour', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Withdrawal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('state', models.BooleanField()),
            ],
        ),
    ]
